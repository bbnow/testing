{"name":"Surf","tagline":"IoT/M2M for Amazon AWS","body":"#Examples\r\n* Example 1 - Simple Setup\r\n* Example 2 - Page Count \r\n\r\n***\r\n\r\n##Example 1 – Simple Set-up\r\nThis example explores connectivity between on-premise data sources and cloud-based Kinesis applications.\r\n\r\n![Example1 Picture](images/surf2_4.jpg)\r\n\r\nIn this example the data source and the application are very simple – data source generates a stream of time-stamps, the application displays the time-stamps on a console.\r\n\r\n###Surf Data Source\r\n> The code for the data source can be found in file com.informatica.surf.sources.dummy.DummySource.java\r\nFor this sample the data source generates time-stamps and streams them to Kinesis application:\r\n\r\n`    public void read(VDSEventList readEvents) throws Exception {`\r\n`         Thread.sleep(1000);`\r\n`         Date d = new Date();`\r\n`         byte []b = d.toString().getBytes();`\r\n`         readEvents.addEvent(b, b.length, _headers);`\r\n`    } `\r\n\r\nGenerally, a Surf user only needs to configure a data source like File-tailer, HTTP, or MQTT. However, the user may also easily develop new data sources as needed.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}